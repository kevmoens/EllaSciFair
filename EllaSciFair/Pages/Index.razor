@page "/"
@page "/{MyNumber}"
@using EllaSciFair.Data
@using EllaSciFair.Models.Dialog
@using EllaSciFair.Models.Index
@inject ISignUpRepository repoSignUp
@inject ITakeANumberRepository repoTakeANum
@inject NavigationManager navMan
<style>
  body {
    display: grid;
    height: 100%;
    width: 100%;
    place-items: center;
    background-image: linear-gradient(#e60073, #33f);
    height: 100vh;
  }

</style>

<PageTitle>Ella Science Fair</PageTitle>

    <div class="wrapper">
      <div class="title">360 Photo Booth</div>
      <EditForm Model="@formModel" OnValidSubmit="@OnRegister" action="#">
          <div  class="signForm">
          
@if (mySignup != null)
{
        <div class="field">
            <h4>Current Person's Number: @takeANumber?.CurrentNumber</h4>
        </div>
    @if (string.IsNullOrEmpty(mySignup?.FileName))
    {
        <h3>Your Number: @mySignup?.Id </h3>
    } else
    {
        <div>Video URL HERE</div>    
    }
}              
@if (mySignup == null)
{
            <div class="field">
              <h1>Sign Up</h1>
            </div>
            <div class="field">
              <input type="text" required @bind-value="@formModel.Name">
              <label>Name</label>
            </div>
            <div class="field">
              <input type="Email" required @bind-value="@formModel.Email">
              <label>Email Address</label>
            </div>
          
            <div class="field">
                <input type="submit" value="Register">
            </div>
} else
{                 
    
            <div class="field">
                <input type="button" @onclick="OnNewSignup" value="New Sign In">
            </div>
            
            <div class="field">
                <input type="button" @onclick="OnRefresh" value="Refresh">
            </div>
}
        </div>
      </EditForm>
    </div>



@code {
    IndexFormModel formModel = new IndexFormModel();
    public SignUp? mySignup;
    public TakeANumber? takeANumber;
    public Timer? timer;    

    [Parameter]
    public string? MyNumber { get; set; }
    protected override void OnInitialized()
    {

        int myNumber = 0;
        if (int.TryParse(MyNumber, out myNumber))
        {
            mySignup = repoSignUp.GetSignUp(myNumber);
        }
        takeANumber = repoTakeANum.Get();
        base.OnInitialized();
        StateHasChanged();
    }

    async void OnRegister()
    {
        if (string.IsNullOrEmpty(formModel.Email))
        {
            await MsgBox.Show("Email is required.", "Error", DialogButtons.OK);
            return;
        }
        if (string.IsNullOrEmpty(formModel.Name))
        {
            await MsgBox.Show("Name is required.", "Error", DialogButtons.OK);
            return;
        }
        mySignup = new SignUp();
        mySignup.Email = formModel.Email;
        mySignup.Name = formModel.Name;
        var id = repoSignUp.Add(mySignup);
        mySignup.Id = id;
        StateHasChanged();
    }
    void OnNewSignup()
    {
        mySignup = null;
        formModel = new IndexFormModel();
        StateHasChanged();
    }
    void OnRefresh()
    {        
        navMan.NavigateTo($"/{mySignup?.Id}", true);
    }
}